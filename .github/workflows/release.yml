name: Deploy

on:
    release:

permissions:
    contents: write

jobs:
    build-and-upload:
        name: Build and upload
        runs-on: $\{\{ matrix.os \}\}

        strategy:
            matrix:
                # Targets
                include:
                    - build: linux
                      os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu

                    - build: macos
                      os: macos-latest
                      target: x86_64-apple-darwin

                    - build: macos-arm64
                      os: macos-latest
                      target: aarch64-apple-darwin

                    - build: windows
                      os: windows-latest
                      target: x86_64-pc-windows-msvc

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Get the release version from the tag
              shell: bash
              run: echo "VERSION=$\{GITHUB_REF#refs/tags/\}" >> $GITHUB_ENV

            - name: Install Rust
              uses: dtolnay/rust-toolchain@nightly
              with:
                  # Make Rust compile to our target (defined in the matrix)
                  targets: $\{\{ matrix.target \}\}

            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: build
                  args: --verbose --release --target $\{\{ matrix.target \}\}

            - name: Build archive
              shell: bash
              run: |
                  binary_name="tsunami"

                  dirname="$binary_name-$\{\{ env.VERSION \}\}-$\{\{ matrix.target \}\}"
                  mkdir "$dirname"
                  if [ "$\{\{ matrix.os \}\}" = "windows-latest" ]; then
                    mv "target/$\{\{ matrix.target \}\}/release/$binary_name.exe" "$dirname"
                  else
                    mv "target/$\{\{ matrix.target \}\}/release/$binary_name" "$dirname"
                  fi

                  if [ "$\{\{ matrix.os \}\}" = "windows-latest" ]; then
                    7z a "$dirname.zip" "$dirname"
                    echo "ASSET=$dirname.zip" >> $GITHUB_ENV
                  else
                    tar -czf "$dirname.tar.gz" "$dirname"
                    echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
                  fi

            - name: Release
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      $\{\{ env.ASSET \}\}
